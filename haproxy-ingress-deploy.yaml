apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "12"
    policies.kyverno.io/patches: |
      podControllerAnnotation.disallow-host-network-port.kyverno.io: added /spec/template/metadata/annotations
  creationTimestamp: "2019-02-01T17:08:20Z"
  generation: 32
  labels:
    run: haproxy-ingress
  name: haproxy-ingress
  namespace: ingress-haproxy9
spec:
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      run: haproxy-ingress
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        pod-policies.kyverno.io/autogen-applied: "true"
      labels:
        run: haproxy-ingress
      namespace: ingress-haproxy9
    spec:
      containers:
      - image: fluent/fluent-bit:1.5
        imagePullPolicy: IfNotPresent
        name: sumo-fluentbit
        ports:
        - containerPort: 514
          name: udp
          protocol: UDP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /fluent-bit/etc/
          name: config-volume
      - args:
        - --default-backend-service=$(POD_NAMESPACE)/ingress-default-backend
        - --default-ssl-certificate=$(POD_NAMESPACE)/kube-all-inusca-svc.dev.nibr.novartis.net
        - --configmap=$(POD_NAMESPACE)/haproxy-configmap
        - --reload-strategy=native
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: ghcr.io/nirmata/haproxy-ingress:v0.9-beta.3
        imagePullPolicy: IfNotPresent
        name: haproxy-ingress
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          name: https
          protocol: TCP
        - containerPort: 1936
          name: stat
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: docker-repo.nibr.novartis.net
      - name: index.docker.io
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: haproxy-ingress-serviceaccount
      serviceAccountName: haproxy-ingress-serviceaccount
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: sumo-fluentbit-config
          optional: false
        name: config-volume

